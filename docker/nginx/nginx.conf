# A directive which can define a pool of servers.
# https://www.digitalocean.com/community/tutorials/understanding-nginx-http-proxying-load-balancing-buffering-and-caching#:~:text=Nginx%20allows%20us%20to%20easily%20scale%20this%20configuration,servers%20is%20capable%20of%20handling%20a%20client%E2%80%99s%20request.
upstream rails_app {  
   server web:3000;
} 

server {  
   # defines the name for a given server
   server_name pomonastudents.org

   # define the path that requests will extend upon
   # note that $RAILS_ROOT is an env variable that points to
   # the rails root path 
   root   $RAILS_ROOT/public;  
   index  index.html;

   # define where Nginx should write its logs  
   access_log $RAILS_ROOT/log/nginx.access.log;  
   error_log $RAILS_ROOT/log/nginx.error.log;   
  
   # deny requests for files that should never be accessed  
   location ~ /\. {    
      deny all;  
   }

   location ~* ^.+\.(rb|log)$ {    
      deny all;  
   }  
 
   # serve static (compiled) assets directly if they exist (for rails production)  
   location ~ ^/(assets|images|javascripts|stylesheets|swfs|system)/   {    
      try_files $uri @rails;     
      access_log off;    
      gzip_static on; 

      # to serve pre-gzipped version     
      expires max;    
      add_header Cache-Control public;     
      
      add_header Last-Modified "";    
      add_header ETag "";    
      break;  
   } 
  
   # send non-static file requests to the app server  
   location / {    
       # @rails is a named location which will fallback to location @rails
      try_files $uri @rails;  
   } 

   # Forward _asset requestsion to wiki

   location ~ ^/(_assets|wiki)/ {
      proxy_pass http://wiki:3000
   }

   location @rails {    
      proxy_set_header  X-Real-IP  $remote_addr;    
      proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;         
      proxy_set_header Host $http_host;    
      proxy_redirect off;    
      proxy_pass http://rails_app;  
   }
}
